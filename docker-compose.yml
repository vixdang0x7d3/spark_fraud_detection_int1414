services:
  spark-master:
    container_name: da-spark-master
    build: .
    entrypoint: ['./entrypoint.sh', 'master']
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 5s
      timeout: 3s
      retries: 3
    volumes :
      - ./src:/app/src
      - ./sparkov_gen/:/app/data_generation
      - ./data:/app/data
      - ./output:/app/output
      - ./logs:/app/logs

    env_file:
      - .env.spark
    environment:
      - SPARK_MASTER_HOST=spark-master
    ports:
      - '9090:8080'
      - '7077:7077'
    networks:
      - spark-network

  spark-history-server:
    container_name: da-spark-history
    build: .
    entrypoint: ['./entrypoint.sh', 'history']
    depends_on:
      spark-master:
        condition: service_healthy
    env_file:
      - .env.spark
    volumes:
      - spark-logs:/opt/spark/spark-events
    ports:
      - '18080:18080'
    networks:
      - spark-network

  spark-worker:
    build: .
    entrypoint: ['./entrypoint.sh', 'worker']
    depends_on:
      spark-master:
        condition: service_healthy
    env_file:
      - .env.spark
    environment:
      - SPARK_MASTER_HOST=spark-master
    volumes:
      - ./src:/app/src
      - ./sparkov_gen/:/app/data_generation
      - ./data:/app/data
      - ./output:/app/output
      - ./logs:/app/logs

    networks:
      - spark-network

  minio:
    image: minio/minio:latest
    container_name: minio
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/data
    command: server /data --console-address ":9001"
    networks:
      - spark-network

  minio-init:
    image: minio/mc:latest
    container_name: minio-init
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      sleep 5;
      /usr/bin/mc alias set myminio http://minio:9000 minioadmin minioadmin123;
      /usr/bin/mc mb myminio/spark-data --ignore-existing;
      /usr/bin/mc mb myminio/spark-output --ignore-existing;
      exit 0;
      "
    networks:
      - spark-network

volumes:
  minio-data:
  spark-logs:

networks:
  spark-network:
    driver: bridge

